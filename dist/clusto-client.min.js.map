{"version":3,"file":"clusto-client.min.js","sources":["_build/es6/clusto-client.js"],"names":["request","require","URI","Promise","Applications","ATTRIBUTE","ENTITY","RESOURCE_MANAGER","Mode","COMPACT","EXPANDED","Headers","MODE","PER_PAGE","PAGE","PAGES","MINIFY","AttributeType","INTEGER","STRING","DATETIME","RELATION","JSON","Client","data","this","mount_points","Map","_base_url","attribute","__proto__","app","get","opts","path","segment","name","key","subkey","number","_get","toString","add","options","mode","params","value","_post","set","_put","delete","_delete","entity","driver","create","insert","device","action","remove","resource","manager","_step","_iterator","Object","keys","Symbol","iterator","_iteratorNormalCompletion","next","done","allocate","object","deallocate","base_url","clone","get_meta","then","_this","clear","_step2","_iterator2","_iteratorNormalCompletion2","mount","pool","children","Array","bno","names","_request","method","url","normalizePath","req","page","per_page","query","send","resolve","reject","end","err","res","body"],"mappings":"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","sourcesContent":["const request = require('superagent');\nconst URI = require('URIjs');\nconst Promise = require('bluebird');\n/* -----------------------------------------------------------------------------\n   API Constants\n   ----------------------------------------------------------------------------- */\nexport const Applications = {\n    ATTRIBUTE: 'clustoapi.apps.attribute',\n    ENTITY: 'clustoapi.apps.entity',\n    RESOURCE_MANAGER: 'clustoapi.apps.resourcemanager'\n};\nexport const Mode = {\n    COMPACT: 'compact',\n    EXPANDED: 'expanded'\n};\nexport const Headers = {\n    MODE: 'Clusto-Mode',\n    PER_PAGE: 'Clusto-Per-Page',\n    PAGE: 'Clusto-Page',\n    PAGES: 'Clusto-Pages',\n    MINIFY: 'Clusto-Minify'\n};\nexport const AttributeType = {\n    INTEGER: 'int',\n    STRING: 'string',\n    DATETIME: 'datetime',\n    RELATION: 'relation',\n    JSON: 'json'\n};\n/* -----------------------------------------------------------------------------\n   Client\n   ----------------------------------------------------------------------------- */\nexport class Client {\n    constructor(data) {\n        this.mount_points = new Map();\n        this._base_url = new URI('http://localhost:9664');\n        /* --------------------------------------------------\n           Attribute module\n           -------------------------------------------------- */\n        this.attribute = {\n            __proto__: this,\n            app: Applications.ATTRIBUTE,\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.attribute.attrs\n             */\n            get(opts) {\n                let path = new URI('');\n                if (typeof opts === 'string') {\n                    path.segment(opts); /* name */\n                }\n                else {\n                    path.segment(opts.name);\n                    if (opts.key) {\n                        path.segment(opts.key);\n                    }\n                    if (opts.subkey) {\n                        path.segment(opts.subkey);\n                    }\n                    if (opts.number) {\n                        path.segment(opts.number);\n                    }\n                }\n                return this._get(path.toString(), {\n                    app: this.app\n                });\n            },\n            /**\n             * Add attributes to an entity.\n             *\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.attribute.add_attr\n             */\n            add(opts) {\n                let path = `/${opts.name}`;\n                let options = {\n                    app: this.app,\n                    mode: opts.mode,\n                    params: {\n                        key: opts.key,\n                        value: opts.value\n                    }\n                };\n                if (opts.subkey) {\n                    options.params.subkey = opts.subkey;\n                }\n                if (opts.number) {\n                    options.params.number = opts.number;\n                }\n                return this._post(path, options);\n            },\n            /**\n             * Update attributes on an entity.\n             *\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.attribute.set_attr\n             */\n            set(opts) {\n                let path = new URI('')\n                    .segment(opts.name)\n                    .segment(opts.key);\n                if (opts.subkey) {\n                    path.segment(opts.subkey);\n                }\n                if (opts.number) {\n                    path.segment(opts.number);\n                }\n                let options = {\n                    app: this.app,\n                    mode: opts.mode,\n                    params: {\n                        value: opts.value\n                    }\n                };\n                return this._put(path, options);\n            },\n            /**\n             * Remove attributes from an entity.\n             *\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.attribute.del_attrs\n             */\n            delete(opts) {\n                let path = new URI('')\n                    .segment(opts.name)\n                    .segment(opts.key);\n                if (opts.subkey) {\n                    path.segment(opts.subkey);\n                }\n                if (opts.number) {\n                    path.segment(opts.number);\n                }\n                return this._delete(path.toString(), {\n                    app: this.app\n                });\n            }\n        };\n        /* --------------------------------------------------\n           Entity module\n           -------------------------------------------------- */\n        this.entity = {\n            __proto__: this,\n            app: Applications.ENTITY,\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.list\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.show\n             */\n            get(opts) {\n                let path = new URI('');\n                let options = (typeof opts === 'string') ? { driver: opts } : opts || {};\n                if (options.driver) {\n                    path.segment(options.driver);\n                }\n                if (options.name) {\n                    path.segment(options.name);\n                }\n                return this._get(path.toString(), {\n                    app: this.app,\n                    mode: options.mode\n                });\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.create\n             */\n            create(opts) {\n                let path = `/${opts.driver}`;\n                return this._post(path, {\n                    mode: opts.mode,\n                    app: this.app,\n                    params: {\n                        name: opts.name\n                    }\n                });\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.action\n             */\n            insert(opts) {\n                let path = `/${opts.driver}/${opts.name}`;\n                return this._post(path, {\n                    mode: opts.mode,\n                    app: this.app,\n                    params: {\n                        device: opts.device,\n                        action: 'insert'\n                    }\n                });\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.action\n             */\n            remove(opts) {\n                let path = `/${opts.driver}/${opts.name}`;\n                return this._post(path, {\n                    mode: opts.mode,\n                    app: this.app,\n                    params: {\n                        device: opts.device,\n                        action: 'remove'\n                    }\n                });\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.entity.delete\n             */\n            delete(opts) {\n                let path = new URI('')\n                    .segment(opts.driver)\n                    .segment(opts.name);\n                return this._delete(path.toString(), {\n                    app: this.app\n                });\n            }\n        };\n        /* --------------------------------------------------\n           Resource manager module\n           -------------------------------------------------- */\n        this.resource = {\n            __proto__: this,\n            app: Applications.RESOURCE_MANAGER,\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.resourcemanager.list\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.resourcemanager.show\n             */\n            get(opts) {\n                let path = new URI('');\n                let options = (typeof opts === 'string') ? { driver: opts } : opts || {};\n                if (options.driver) {\n                    path.segment(options.driver);\n                }\n                if (options.manager) {\n                    path.segment(options.manager);\n                }\n                return this._get(path.toString(), {\n                    app: this.app,\n                    mode: options.mode\n                });\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.resourcemanager.create\n             */\n            create(opts) {\n                let path = `/${opts.driver}`;\n                let options = {\n                    app: this.app,\n                    mode: opts.mode,\n                    params: {\n                        name: opts.name\n                    }\n                };\n                if (opts.params) {\n                    for (let key of Object.keys(opts.params)) {\n                        options.params[key] = opts.params[key];\n                    }\n                }\n                return this._post(path, options);\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.resourcemanager.allocate\n             */\n            allocate(opts) {\n                let path = `/${opts.driver}/${opts.manager}`;\n                let thing = opts.driver || opts.object;\n                let options = {\n                    app: this.app,\n                    mode: opts.mode,\n                    params: {}\n                };\n                if (opts.object) {\n                    options.params.object = opts.object;\n                }\n                if (opts.resource) {\n                    options.params.resource = opts.resource;\n                }\n                return this._post(path, options);\n            },\n            /**\n             * @see http://clusto-apiserver.readthedocs.org/clustoapi/apps/all.html#clustoapi.apps.resourcemanager.deallocate\n             */\n            deallocate(opts) {\n                let path = new URI('')\n                    .segment(opts.driver)\n                    .segment(opts.manager);\n                return this._delete(path.toString(), {\n                    app: this.app\n                });\n            }\n        };\n        if (data) {\n            if (typeof data === 'string') {\n                this._base_url = new URI(data);\n            }\n            else {\n                if (data.base_url) {\n                    this._base_url = new URI(data.base_url);\n                }\n            }\n        }\n    }\n    get base_url() {\n        return this._base_url.clone();\n    }\n    /**\n     * Initialize the client, setting up the map of clusto application\n     * mount points (base URL paths).\n     *\n     * @returns Promise\n     */\n    init() {\n        return this.get_meta()\n            .then(data => {\n            this.mount_points.clear();\n            for (let mount of Object.keys(data)) {\n                let app = data[mount];\n                this.mount_points.set(app, mount);\n            }\n        });\n    }\n    /* --------------------------------------------------\n       Main module\n       -------------------------------------------------- */\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.version\n     */\n    get_version() {\n        return this._get('/__version__');\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.meta\n     */\n    get_meta() {\n        return this._get('/__meta__');\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.build_docs\n     */\n    get_doc() {\n        return this._get('/__doc__');\n    }\n    /**\n     * @see\n     */\n    get_driverlist() {\n        return this._get('/driverlist');\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.get_from_pools\n     */\n    get_from_pools(opts) {\n        let options = { params: {} };\n        if (typeof opts === 'string') {\n            options.params.pool = opts;\n        }\n        else {\n            options.params.pool = opts.pool;\n            options.params.driver = opts.driver;\n            options.params.children = opts.children;\n            options.mode = opts.mode;\n        }\n        return this._get('/from-pools', options);\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.get_by_name\n     */\n    get_by_name(opts) {\n        let options = { params: {} };\n        let name = null;\n        if (typeof opts === 'string') {\n            name = opts;\n        }\n        else {\n            name = opts.name;\n            if (opts.mode) {\n                options.mode = opts.mode;\n            }\n            if (opts.driver) {\n                options.params.driver = opts.driver;\n            }\n        }\n        return this._get(`/by-name/${name}`, options);\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.get_by_names\n     */\n    get_by_names(opts) {\n        let options = { params: {} };\n        if (opts instanceof Array) {\n            options.params.name = opts;\n        }\n        else {\n            let bno = opts;\n            options.params.name = bno.names;\n            if (bno.mode) {\n                options.mode = bno.mode;\n            }\n        }\n        return this._get('/by-names', options);\n    }\n    /**\n     * @see http://clusto-apiserver.readthedocs.org/clustoapi/all.html#clustoapi.server.get_by_attr\n     */\n    get_by_attr(opts) {\n        let options = { params: {} };\n        if (typeof opts === 'string') {\n            options.params.key = opts;\n        }\n        else {\n            options.params.key = opts.key;\n            if (opts.subkey) {\n                options.params.subkey = opts.subkey;\n            }\n            if (opts.value) {\n                options.params.value = opts.value;\n            }\n        }\n        return this._get('/by-attr', options);\n    }\n    /* ----------------------------------------\n       Internal helpers\n       ---------------------------------------- */\n    _get(path, options) {\n        return this._request('GET', path, options);\n    }\n    _delete(path, options) {\n        return this._request('DELETE', path, options);\n    }\n    _post(path, options) {\n        return this._request('POST', path, options);\n    }\n    _put(path, options) {\n        return this._request('PUT', path, options);\n    }\n    _request(method, path, options) {\n        // Build request URL\n        let url = this.base_url;\n        if (options && options.app) {\n            url.segment(this.mount_points.get(options.app));\n        }\n        url.segment(path)\n            .normalizePath();\n        let req = request(method, url.toString())\n            .set('Clusto-Minify', true)\n            .set('Accept', 'application/json');\n        if (options && options.mode) {\n            req.set(Headers.MODE, options.mode);\n        }\n        if (options && options.page) {\n            req.set(Headers.PAGE, options.page);\n        }\n        if (options && options.per_page) {\n            req.set(Headers.PER_PAGE, options.per_page);\n        }\n        // Query string\n        if ((method === 'GET') && options && options.params) {\n            req.query(options.params);\n        }\n        if ((method === 'POST' || method === 'PUT') && options && options.params) {\n            req.set('Content-Type', 'application/x-www-form-urlencoded')\n                .send(options.params);\n        }\n        return new Promise((resolve, reject) => {\n            req.end((err, res) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(res.body);\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=clusto-client.js.map"]}